const { db } = require('./lib/firebaseAdmin');

async function populateFirestore() {
  try {
    // Populate waiters
    const waiters = [
      {
        id: 'waiter1',
        name: 'John Doe',
        email: 'john@example.com',
        fcmToken: 'test-fcm-token-1', // Replace with real FCM token from React Native app
      },
      {
        id: 'waiter2',
        name: 'Jane Smith',
        email: 'jane@example.com',
        fcmToken: 'test-fcm-token-2',
      },
    ];

    for (const waiter of waiters) {
      await db.collection('waiters').doc(waiter.id).set({
        name: waiter.name,
        email: waiter.email,
        fcmToken: waiter.fcmToken,
      });
      console.log(`Added waiter: ${waiter.name}`);
    }

    // Populate events
    const events = [
      {
        id: 'event1',
        name: 'Wedding',
        date: '2025-06-01',
        location: 'Venue A',
      },
      {
        id: 'event2',
        name: 'Corporate Party',
        date: '2025-07-15',
        location: 'Venue B',
      },
    ];

    for (const event of events) {
      await db.collection('events').doc(event.id).set({
        name: event.name,
        date: event.date,
        location: event.location,
      });
      console.log(`Added event: ${event.name}`);
    }

    console.log('Firestore populated successfully');
  } catch (error) {
    console.error('Error populating Firestore:', error);
  }
}

populateFirestore();



'use client';

import { useState, useRef } from 'react';
import { getFirestore, collection, addDoc, serverTimestamp } from 'firebase/firestore';
import { db } from '../config/firebaseConfig';

export default function Triplets() {
  const [textInput, setTextInput] = useState('');
  const [results, setResults] = useState([]);
  const [monthlyTripletCounts, setMonthlyTripletCounts] = useState({});
  const [processing, setProcessing] = useState(false);
  const textAreaRef = useRef(null);
  const saveButtonRef = useRef(null);

  const handleTextInputChange = (event) => {
      setTextInput(event.target.value);
  };

  const handleFileUpload = async (event) => {
      const file = event.target.files[0];
      if (file) {
          setProcessing(true);
          const reader = new FileReader();
          reader.onload = async (e) => {
              const csvText = e.target.result;
              try {
                  const extractedData = extractLotteryDataFromCSV(csvText);
                  setResults(extractedData);
                  const monthlyCounts = countTripletsByMonth(extractedData);
                  setMonthlyTripletCounts(monthlyCounts);
              } catch (error) {
                  console.error('Error processing CSV file:', error);
                  alert(`Failed to process CSV file: ${error.message}`);
              } finally {
                  setProcessing(false);
                  if (saveButtonRef.current) {
                      saveButtonRef.current.focus();
                  }
              }
          };
          reader.onerror = () => {
              alert('Failed to read the CSV file.');
              setProcessing(false);
          };
          reader.readAsText(file);
      }
  };

  const processText = async () => {
      try {
          setProcessing(true);
          const extractedData = extractLotteryData(textInput);
          setResults(extractedData);
          const monthlyCounts = countTripletsByMonth(extractedData);
          setMonthlyTripletCounts(monthlyCounts);
      } catch (error) {
          console.error('Error processing text:', error);
          alert(`Failed to process text: ${error.message}`);
      } finally {
          setProcessing(false);
          if (saveButtonRef.current) {
              saveButtonRef.current.focus();
          }
      }
  };

  const saveToFirestore = async () => {
      if (!db) {
          alert('Firestore is not initialized. Check Firebase configuration.');
          return;
      }

      try {
          const collectionRef = collection(db, 'uk49s_monthly_triplets');
          await addDoc(collectionRef, {
              monthlyTripletCounts: monthlyTripletCounts,
              draws: results,
              createdAt: serverTimestamp(),
          });
          alert('Successfully saved to Firestore!');
          setTextInput('');
          textAreaRef.current.focus();
      } catch (error) {
          console.error('Error saving to Firestore:', error);
          alert('Failed to save to Firestore');
      }
  };

  const countTriplets = (draws) => {
    const tripletList = [
      '36-27-25', '36-27-24', '35-26-25', '35-26-24', '35-26-23', '34-25-24', '34-25-23', '34-25-22',
      '33-24-23', '33-24-22', '33-24-21', '32-23-22', '32-23-21', '32-23-20', '31-22-35', '31-22-21',
      '31-22-20', '31-22-19', '31-22-36', '30-21-33', '30-21-20', '30-21-19', '30-21-18', '30-21-34',
      '30-21-35', '30-21-36', '29-20-31', '29-20-19', '29-20-18', '29-20-17', '29-20-32', '29-20-33',
      '29-20-34', '28-19-29', '28-19-18', '28-19-17', '28-19-16', '28-19-30', '28-19-31', '28-19-32',
      '28-19-36', '28-19-35', '27-18-17', '27-18-16', '27-18-15', '27-18-28', '27-18-29', '27-18-30',
      '27-18-34', '27-18-35', '27-18-33', '26-17-25', '26-17-16', '26-17-15', '26-17-14', '26-17-27',
      '26-17-28', '26-17-32', '26-17-33', '26-17-31', '25-16-23', '25-16-15', '25-16-14', '25-16-13',
      '25-16-24', '25-16-26', '25-16-30', '25-16-31', '25-16-29', '24-15-21', '24-15-14', '24-15-13',
      '24-15-12', '24-15-22', '24-15-23', '24-15-28', '24-15-29', '24-15-27', '24-15-35', '23-14-19',
      '23-14-13', '23-14-12', '23-14-11', '23-14-20', '23-14-21', '23-14-22', '23-14-26', '23-14-27',
      '23-14-25', '23-14-32', '22-13-17', '22-13-12', '22-13-11', '22-13-10', '22-13-18', '22-13-19',
      '22-13-20', '22-13-24', '22-13-25', '22-13-23', '22-13-29', '21-12-15', '21-12-11', '21-12-10',
      '21-12-9', '21-12-16', '21-12-17', '21-12-18', '21-12-22', '21-12-23', '21-12-21', '21-12-26',
      '20-11-19', '20-11-10', '20-11-9', '20-11-8', '20-11-14', '20-11-15', '20-11-16', '20-11-20',
      '20-11-21', '20-11-19', '20-11-23', '19-10-11', '19-10-9', '19-10-8', '19-10-7', '19-10-12',
      '19-10-13', '19-10-14', '19-10-18', '19-10-17', '19-10-20', '18-9-8', '18-9-7', '18-9-11',
      '18-9-6', '18-9-12', '17-8-10', '17-8-11', '17-8-12', '17-8-13', '17-8-7', '17-8-6', '17-8-5',
      '17-8-15', '17-8-14', '17-8-14', '16-7-11', '16-7-11', '16-7-12', '16-7-13', '16-7-14', '16-7-6',
      '16-7-5', '16-7-4', '16-7-17', '15-6-12', '15-6-13', '15-6-14', '15-6-15', '15-6-5', '15-6-4',
      '15-6-3', '15-6-3', '15-6-11', '15-6-10', '15-6-9', '15-6-10', '15-6-9', '15-6-17', '14-5-13',
      '14-5-14', '14-5-15', '14-5-15', '14-5-16', '14-5-4', '14-5-3', '14-5-2', '14-5-9', '14-5-8',
      '14-5-7', '14-5-17', '13-4-14', '13-4-15', '13-4-16', '13-4-17', '13-4-3', '13-4-2', '13-4-1',
      '13-4-7', '13-4-6', '13-4-5', '13-4-17', '12-3-15', '12-3-16', '12-3-17', '12-3-18', '12-3-2',
      '12-3-1', '12-3-5', '12-3-4', '11-2-16', '11-2-17', '11-2-18', '11-2-19', '11-2-1', '11-2-3',
      '11-2-17', '10-1-17', '10-1-18', '10-1-19', '36-23-33', '36-23-22', '36-23-21', '36-23-20',
      '36-23-34', '36-23-35', '35-22-31', '35-22-21', '35-22-20', '35-22-20', '35-22-19', '35-22-32',
      '35-22-33', '35-22-34', '34-21-29', '34-21-20', '34-21-19', '34-21-18', '34-21-30', '34-21-31',
      '34-21-32', '33-20-27', '33-20-19', '33-20-18', '33-20-17', '33-20-28', '33-20-29', '33-20-30',
      '32-19-25', '32-19-18', '32-19-17', '32-19-16', '32-19-26', '32-19-27', '32-19-28', '32-19-36',
      '32-19-35', '31-18-23', '31-18-17', '31-18-16', '31-18-15', '31-18-24', '31-18-25', '31-18-26',
      '31-18-34', '31-18-35', '31-18-35', '31-18-33', '30-17-21', '30-17-16', '30-17-14', '30-17-22',
      '30-17-23', '30-17-24', '30-17-32', '30-17-33', '30-17-31', '29-16-19', '29-16-15', '29-16-14',
      '29-16-13', '29-16-20', '29-16-21', '29-16-22', '29-16-30', '29-16-31', '29-16-34', '28-15-17',
      '28-15-14', '28-15-13', '28-15-12', '28-15-18', '28-15-19', '28-15-20', '28-15-29', '28-15-29',
      '28-15-27', '28-15-31', '27-14-15', '27-14-13', '27-14-12', '27-14-11', '27-14-16', '27-14-17',
      '27-14-18', '27-14-26', '27-14-25', '27-14-28', '26-13-12', '26-13-11', '26-13-10', '26-13-14',
      '26-13-15', '26-13-16', '25-12-14', '25-12-15', '25-12-16', '25-12-11', '25-12-10', '25-12-9',
      '25-12-26', '25-12-27', '25-12-28', '25-12-23', '25-12-22', '25-12-21', '24-11-15', '24-11-16',
      '24-11-17', '24-11-18', '24-11-10', '24-11-10', '24-11-9', '24-11-8', '24-11-26', '24-11-27',
      '24-11-28', '24-11-21', '24-11-20', '24-11-19', '23-10-16', '23-10-17', '23-10-18', '23-10-19',
      '23-10-9', '23-10-8', '23-10-7', '23-10-26', '23-10-27', '23-10-28', '23-10-19', '23-10-18',
      '23-10-17', '22-9-17', '22-9-18', '22-9-20', '22-9-8', '22-9-7', '22-9-6', '22-9-26', '22-9-27',
      '22-9-28', '22-9-17', '22-9-16', '22-9-15', '21-8-18', '21-8-19', '21-8-20', '21-8-21', '21-8-7',
      '21-8-6', '21-8-5', '21-8-26', '21-8-27', '21-8-28', '21-8-15', '21-8-14', '21-8-13', '20-7-19',
      '20-7-21', '20-7-22', '20-7-6', '20-7-5', '20-7-4', '20-7-26', '20-7-27', '20-7-28', '20-7-13',
      '20-7-12', '20-7-11', '19-6-20', '19-6-21', '19-6-22', '19-6-23', '19-6-5', '19-6-4', '19-6-3',
      '19-6-26', '19-6-27', '19-6-28', '19-6-11', '19-6-10', '19-6-10', '19-6-9', '18-5-21', '18-5-22',
      '18-5-23', '18-5-24', '18-5-4', '18-5-3', '18-5-2', '18-5-26', '18-5-27', '18-5-28', '18-5-9',
      '18-5-8', '18-5-7', '17-4-22', '17-4-23', '17-4-24', '17-4-25', '17-4-3', '17-4-2', '17-4-1',
      '17-4-26', '17-4-27', '17-4-28', '17-4-7', '17-4-7', '17-4-6', '17-4-5', '16-3-23', '16-3-24',
      '16-3-25', '16-3-26', '16-3-2', '16-3-1', '16-3-27', '16-3-28', '16-3-5', '16-3-4', '15-2-24',
      '15-2-25', '15-2-26', '15-2-27', '15-2-1', '15-2-28', '15-2-3', '14-1-25', '14-1-26', '14-1-27',
      '14-1-28', '36-24-23', '36-24-22', '36-24-21', '35-23-34', '35-23-22', '35-23-21', '35-23-20',
      '35-23-36', '34-22-32', '34-22-21', '34-22-20', '34-22-19', '34-22-33', '34-22-35', '33-21-30',
      '33-21-20', '33-21-19', '33-21-18', '33-21-31', '33-21-32', '32-20-28', '32-20-19', '32-20-18',
      '32-20-18', '32-20-17', '32-20-29', '32-20-30', '32-20-31', '31-19-26', '31-19-18', '31-19-17',
      '31-19-16', '31-19-27', '31-19-28', '31-19-29', '31-19-36', '30-18-24', '30-18-17', '30-18-16',
      '30-18-16', '30-18-15', '30-18-25', '30-18-26', '30-18-27', '30-18-34', '30-18-35', '30-18-33',
      '29-17-22', '29-17-16', '29-17-15', '29-17-14', '29-17-23', '29-17-24', '29-17-25', '29-17-25',
      '29-17-32', '29-17-33', '29-17-31', '28-16-20', '28-16-15', '28-16-14', '28-16-13', '28-16-21',
      '28-16-22', '28-16-23', '28-16-30', '28-16-31', '28-16-29', '28-16-35', '27-15-18', '27-15-14',
      '27-15-13', '27-15-12', '27-15-19', '27-15-21', '27-15-28', '27-15-29', '27-15-32', '26-14-16',
      '26-14-13', '26-14-12', '26-14-11', '26-14-17', '26-14-18', '26-14-19', '26-14-26', '26-14-27',
      '26-14-25', '26-14-29', '25-13-14', '25-13-12', '25-13-11', '25-13-10', '25-13-15', '25-13-16',
      '25-13-17', '25-13-24', '25-13-23', '25-13-26', '24-12-11', '24-12-10', '24-12-9', '24-12-14',
      '24-12-15', '23-11-10', '23-11-9', '23-11-8', '23-11-21', '23-11-20', '23-11-19', '23-11-23',
      '22-10-14', '22-10-15', '22-10-16', '22-10-17', '22-10-9', '22-10-8', '22-10-7', '22-10-19',
      '22-10-18', '22-10-17', '22-10-23', '21-9-15', '21-9-16', '21-9-17', '21-9-18', '21-9-8',
      '21-9-7', '21-9-6', '21-9-17', '21-9-16', '21-9-15', '21-9-23', '20-8-16', '20-8-17', '20-8-18',
      '20-8-19', '20-8-7', '20-8-6', '20-8-5', '20-8-15', '20-8-14', '20-8-13', '20-8-23', '19-7-17',
      '19-7-18', '19-7-20', '19-7-6', '19-7-5', '19-7-4', '19-7-13', '19-7-12', '19-7-11', '19-7-23',
      '18-6-19', '18-6-20', '18-6-21', '18-6-5', '18-6-4', '18-6-3', '18-6-11', '18-6-10', '18-6-10',
      '18-6-9', '16-6-23', '17-5-19', '17-5-20', '17-5-21', '17-5-22', '17-5-4', '17-5-3', '17-5-2',
      '17-5-9', '17-5-8', '17-5-7', '17-5-23', '16-4-20', '16-4-21', '16-4-22', '16-4-23', '16-4-3',
      '16-4-2', '16-4-1', '16-4-7', '16-4-7', '16-4-6', '16-4-5', '16-4-7', '16-4-5', '16-4-23',
      '15-3-21', '15-3-22', '15-3-23', '15-3-24', '15-3-2', '15-3-1', '15-3-5', '15-3-4', '15-3-23',
      '14-2-22', '14-2-23', '14-2-24', '14-2-25', '14-2-1', '14-2-3', '14-2-1', '14-2-23', '13-1-23',
      '13-1-24', '13-1-25', '13-1-26', '36-21-27', '36-21-20', '36-21-19', '36-21-18', '36-21-28',
      '36-21-29', '36-21-30', '35-20-25', '35-20-19', '35-20-19', '35-20-18', '35-20-17', '35-20-26',
      '35-20-27', '35-20-28', '34-19-23', '34-19-18', '34-19-17', '34-19-16', '34-19-24', '34-19-25',
      '34-19-26', '34-19-36', '33-18-21', '33-18-17', '33-18-16', '33-18-15', '33-18-22', '33-18-23',
      '33-18-24', '33-18-34', '33-18-35', '32-17-19', '32-17-16', '32-17-15', '32-17-14', '32-17-20',
      '32-17-21', '32-17-22', '32-17-33', '32-17-31', '32-17-35', '31-16-17', '31-16-15', '31-16-14',
      '31-16-13', '31-16-18', '31-16-19', '31-16-20', '31-16-30', '31-16-31', '31-16-29', '31-16-32',
      '30-15-14', '30-15-13', '30-15-12', '30-15-16', '30-15-17', '30-15-18', '29-14-16', '29-14-17',
      '29-14-18', '29-14-19', '29-14-13', '29-14-12', '29-14-11', '29-14-27', '29-14-26', '29-14-25',
      '28-13-17', '28-13-18', '28-13-18', '28-13-19', '28-13-20', '28-13-12', '28-13-12', '28-13-11',
      '28-13-10', '28-13-25', '28-13-24', '28-13-23', '28-13-29', '27-12-18', '27-12-19', '27-12-20',
      '27-12-21', '27-12-11', '27-12-10', '27-12-9', '27-12-23', '27-12-23', '27-12-22', '27-12-21',
      '27-12-29', '26-11-19', '26-11-20', '26-11-21', '26-11-22', '26-11-10', '26-11-9', '26-11-8',
      '26-11-21', '26-11-29', '25-10-20', '25-10-21', '25-10-22', '25-10-23', '25-10-9', '25-10-8',
      '25-10-7', '25-10-19', '25-10-18', '25-10-17', '25-10-29', '24-9-21', '24-9-22', '24-9-23',
      '24-9-24', '24-9-8', '24-9-7', '24-9-6', '24-9-17', '24-9-16', '24-9-15', '24-9-29', '23-8-22',
      '23-8-24', '23-8-25', '23-8-7', '23-8-6', '23-8-5', '23-8-15', '23-8-14', '23-8-13', '23-8-29',
      '22-7-23', '22-7-24', '22-7-25', '22-7-26', '22-7-6', '22-7-5', '22-7-4', '22-7-13', '22-7-12',
      '22-7-11', '22-7-29', '21-6-24', '21-6-25', '21-6-26', '31-6-27', '21-6-5', '21-6-4', '21-6-3',
      '21-6-11', '21-6-10', '21-6-9', '21-6-29', '20-5-25', '20-5-26', '20-5-27', '20-5-28', '20-5-28',
      '20-5-4', '20-5-3', '20-5-2', '20-5-9', '20-5-8', '20-5-7', '20-5-29', '19-4-26', '19-4-27',
      '19-4-28', '19-4-29', '19-4-3', '19-4-2', '19-4-1', '19-4-7', '19-4-6', '19-4-5', '18-3-27',
      '18-3-28', '18-3-29', '18-3-30', '18-3-2', '18-3-1', '18-3-5', '18-3-4', '17-2-28', '17-2-29',
      '17-2-30', '17-2-31', '17-2-1', '17-2-3', '16-1-29', '16-1-30', '16-1-31', '16-1-32', '36-26-25',
      '36-26-24', '36-26-23', '35-25-24', '35-25-23', '35-25-22', '34-24-23', '34-24-22', '34-22-24',
      '33-23-22', '33-23-21', '33-23-20', '32-22-34', '32-22-21', '32-22-20', '32-22-19', '32-22-35',
      '32-22-36', '31-21-32', '31-21-20', '31-21-19', '31-21-18', '31-21-33', '31-21-34', '31-21-35',
      '30-20-19', '30-20-18', '30-20-17', '30-20-31', '30-20-32', '30-20-33', '30-19-28', '30-19-18',
      '30-19-17', '30-19-17', '30-19-16', '30-19-29', '30-19-31', '30-19-36', '29-19-28', '29-19-18',
      '49-40-1','49-40-2','49-40-3','49-40-4','49-40-5','49-40-6','49-40-7','49-40-8','48-39-1','48-39-2','48-39-3','48-39-4','48-39-5','48-39-6','48-39-7','48-39-8','47-38-1','47-38-2','47-38-3','47-38-4','47-38-5','47-38-6','47-38-7','47-38-8','46-37-1','46-37-2','46-37-3','46-37-4','46-37-5','46-37-6','46-37-7','46-37-8','45-36-1','45-36-2','45-36-3','45-36-4',
      '45-36-5','45-36-6','45-36-7','45-36-8','44-35-1','44-35-2','44-35-3','44-35-4','44-35-5','44-35-6','44-35-7','44-35-8','43-34-1','43-34-2','43-34-3','43-34-4','43-34-5','43-34-6','43-34-7','43-34-8','42-33-1','42-33-2','42-33-3','42-33-4','42-33-5','42-33-6','42-33-7','42-33-8','41-32-1','41-32-2','41-32-3','41-32-4','41-32-5','41-32-6','41-32-7','41-32-8',
      '40-31-1','40-31-2','40-31-3','40-31-4','40-31-5','40-31-6','40-31-7','40-31-8','39-30-1','39-30-2','39-30-3','39-30-4','39-30-5','39-30-6','39-30-7','39-30-8','38-29-1','38-29-2','38-29-3','38-29-4','38-29-5','38-29-6','38-29-7','38-29-8','37-28-1','37-28-2','37-28-3','37-28-4','37-28-5','37-28-6','37-28-7','37-28-8','36-27-1','36-27-2','36-27-3','36-27-4',
      '36-27-5','36-27-6','36-27-7','36-27-8','35-26-1','35-26-2','35-26-3','35-26-4','35-26-5','35-26-6','35-26-7','35-26-8','34-25-1','34-25-2','34-25-3','34-25-4','34-25-5','34-25-6','34-25-7','34-25-8','33-24-1','33-24-2','33-24-3','33-24-4','33-24-5','33-24-6','33-24-7','33-24-8','32-23-1','32-23-2','32-23-3','32-23-4','32-23-5','32-23-6','32-23-7','32-23-8',
      '31-22-1','31-22-2','31-22-3','31-22-4','31-22-5','31-22-6','31-22-7','31-22-8','30-21-1','30-21-2','30-21-3','30-21-4','30-21-5','30-21-6','30-21-7','30-21-8','29-20-1','29-20-2','29-20-3','29-20-4','29-20-5','29-20-6','29-20-7','29-20-8','28-19-1','28-19-2','28-19-3','28-19-4','28-19-5','28-19-6','28-19-7','28-19-8','27-18-1','27-18-2','27-18-3','27-18-4',
      '27-18-5','27-18-6','27-18-7','27-18-8','26-17-1','26-17-2','26-17-3','26-17-4','26-17-5','26-17-6','26-17-7','26-17-8','25-16-1','25-16-2','25-16-3','25-16-4','25-16-5','25-16-6','25-16-7','25-16-8','24-15-1','24-15-2','24-15-3','24-15-4','24-15-5','24-15-6','24-15-7','24-15-8','23-14-1','23-14-2','23-14-3','23-14-4','23-14-5','23-14-6','23-14-7','23-14-8',
      '22-13-1','22-13-2','22-13-3','22-13-4','22-13-5','22-13-6','22-13-7','22-13-8','21-12-1','21-12-2','21-12-3','21-12-4','21-12-5','21-12-6','21-12-7','21-12-8','20-11-1','20-11-2','20-11-3','20-11-4','20-11-5','20-11-6','20-11-7','20-11-8','19-10-1','19-10-2','19-10-3','19-10-4','19-10-5','19-10-6','19-10-7','19-10-8','18-9-1','18-9-2','18-9-3','18-9-4','17-8-1','17-8-2','17-8-3','17-8-4','17-8-5','17-8-6','17-8-7',
      '18-9-5','18-9-6','18-9-7','18-9-8',

      '49-39-1','49-39-2','49-39-3','49-39-4','49-39-5','49-39-6','49-39-7','49-39-8','48-38-1','48-38-2','48-38-3','48-38-4','48-38-5','48-38-6','48-38-7','48-38-8','47-37-1','47-37-2','47-37-3','47-37-4','47-37-5','47-37-6','47-37-7','47-37-8','47-37-1','46-36-2','46-36-3','46-36-4','46-36-5','46-36-6','46-36-7','46-36-8','45-35-1','45-35-2','45-35-3','45-35-4',
      '45-35-5','45-35-6','45-35-7','45-35-8','44-34-1','44-34-2','44-34-3','44-34-4','44-34-5','44-34-6','44-34-7','44-34-8','43-33-1','43-33-2','43-33-3','43-33-4','43-33-5','43-33-6','43-33-7','43-33-8','42-32-1','42-32-2','42-32-3','42-32-4','42-32-5','42-32-6','42-32-7','42-32-8','41-31-1','41-31-2','41-31-3','41-31-4','41-31-5','41-31-6','41-31-7','41-31-8',
      '40-30-1','40-30-2','40-30-3','40-30-4','40-30-5','40-30-6','40-30-7','40-30-8','39-29-1','39-29-2','39-29-3','39-29-4','39-29-5','39-29-6','39-29-7','39-29-8','38-28-1','38-28-2','38-28-3','38-28-4','38-28-5','38-28-6','38-28-7','38-28-8','37-27-1','37-27-2','37-27-3','37-27-4','37-27-5','37-27-6','37-27-7','37-27-8','36-26-1','36-26-2','36-26-3','36-26-4',
      '36-26-5','36-26-6','36-26-7','36-26-8','35-25-1','35-25-2','35-25-3','35-25-4','35-25-5','35-25-6','35-25-7','35-25-8','34-24-1','34-24-2','34-24-3','34-24-4','34-24-5','34-24-6','34-24-7','34-24-8','33-23-1','33-23-2','33-23-3','33-23-4','33-23-5','33-23-6','33-23-7','33-23-8','32-22-1','32-22-2','32-22-3','32-22-4','32-22-5','32-22-6','32-22-7','32-22-8',
      '31-21-1','31-21-2','31-21-3','31-21-4','31-21-5','31-21-6','31-21-7','31-21-8','30-20-1','30-20-2','30-20-3','30-20-4','30-20-5','30-20-6','30-20-7','30-20-8','29-19-1','29-19-2','29-19-3','29-19-4','29-19-5','29-19-6','29-19-7','29-19-8','28-18-1','28-18-2','28-18-3','28-18-4','28-18-5','28-18-6','28-18-7','28-18-8','27-17-1','27-17-2','27-17-3','27-17-4',
      '27-17-5','27-17-6','27-17-7','27-17-8','26-16-1','26-16-2','26-16-3','26-16-4','26-16-5','26-16-6','26-16-7','26-16-8','25-15-1','25-15-2','25-15-3','25-15-4','25-15-5','25-15-6','25-15-7','25-15-8','24-14-1','24-14-2','24-14-3','24-14-4','24-14-5','24-14-6','24-14-7','24-14-8','23-13-1','23-13-2','23-13-3','23-13-4','23-13-5','23-13-6','23-13-7','23-13-8',
      '22-12-1','22-12-2','22-12-3','22-12-4','22-12-5','22-12-6','22-12-7','22-12-8','21-11-1','21-11-2','21-11-3','21-11-4','21-11-5','21-11-6','21-11-7','21-11-8','20-10-1','20-10-2','20-10-3','20-10-4','20-10-5','20-10-6','20-10-7','20-10-8','19-9-1','19-9-2','19-9-3','19-9-4','19-9-5','19-9-6','19-9-7','19-9-8','18-8-1','18-8-2','18-8-3','18-8-4','18-8-5','18-8-6','18-8-7','17-7-1','17-7-2','17-7-3','17-7-4','17-7-5','17-7-6','16-6-1','16-6-2','16-6-3','16-6-4','16-6-4','16-6-5','15-5-1','15-5-2','15-5-3','15-5-3','15-5-4','14-4-1','14-4-2','14-4-3','13-3-1','13-3-2',

      '49-37-1','49-37-2','49-37-3','49-37-4','49-37-5','49-37-6','49-37-7','49-37-8','48-36-1','48-36-2','48-36-3','48-36-4','48-36-5','48-36-6','48-36-7','48-36-8','47-35-1','47-35-2','47-35-3','47-35-4','47-35-5','47-35-6','47-35-7','47-35-8','46-34-1','46-34-2','46-34-3','46-34-4','46-34-5','46-34-6','46-34-7','46-34-8','45-33-1','45-33-2','45-33-3','45-33-4',
      '45-33-5','45-33-6','45-33-7','45-33-8','44-32-1','44-32-2','44-32-3','44-32-4','44-32-5','44-32-6','44-32-7','44-32-8','43-31-1','43-31-2','43-31-3','43-31-4','43-31-5','43-31-6','43-31-7','43-31-8','42-30-1','42-30-2','42-30-3','42-30-4','42-30-5','42-30-6','42-30-7','42-30-8','41-29-1','41-29-2','41-29-3','41-29-4','41-29-5','41-29-6','41-29-7','41-29-8',
      '40-28-1','40-28-2','40-28-3','40-28-4','40-28-5','40-28-6','40-28-7','40-28-8','39-27-1','39-27-2','39-27-3','39-27-4','39-27-5','39-27-6','39-27-7','39-27-8','38-26-1','38-26-2','38-26-3','38-26-4','38-26-5','38-26-6','38-26-7','38-26-8','37-25-1','37-25-2','37-25-3','37-25-4','37-25-5','37-25-6','37-25-7','37-25-8','36-24-1','36-24-2','36-24-3','36-24-4',
      '36-24-5','36-24-6','36-24-7','36-24-8','35-23-1','35-23-2','35-23-3','35-23-4','35-23-5','35-23-6','35-23-7','35-23-8','34-22-1','34-22-2','34-22-3','34-22-4','34-22-5','34-22-6','34-22-7','34-22-8','33-21-1','33-21-2','33-21-3','33-21-4','33-21-5','33-21-6','33-21-7','33-21-8','32-20-1','32-20-2','32-20-3','32-20-4','32-20-5','32-20-6','32-20-7','32-20-8',
      '31-19-1','31-19-2','31-19-3','31-19-4','31-19-5','31-19-6','31-19-7','31-19-8','30-18-1','30-18-2','30-18-3','30-18-4','30-18-5','30-18-6','30-18-7','30-18-8','29-17-1','29-17-2','29-17-3','29-17-4','29-17-5','29-17-6','29-17-7','29-17-8','28-16-1','28-16-2','28-16-3','28-16-4','28-16-5','28-16-6','28-16-7','28-16-8','27-15-1','27-15-2','27-15-3','27-15-4',
      '27-15-5','27-15-6','27-15-7','27-15-8','26-14-1','26-14-2','26-14-3','26-14-4','26-14-5','26-14-6','26-14-7','26-14-8','25-13-1','25-13-2','25-13-3','25-13-4','25-13-5','25-13-6','25-13-7','25-13-8','24-12-1','24-12-2','24-12-3','24-12-4','24-12-5','24-12-6','24-12-7','24-12-8','23-11-1','23-11-2','23-11-3','23-11-4','23-11-5','23-11-6','23-11-7','23-11-8',
      '22-10-1','22-10-2','22-10-3','22-10-4','22-10-5','22-10-6','22-10-7','22-10-8','21-10-1','21-9-2','21-9-3','21-9-4','21-9-5','21-9-6','21-9-7','21-9-8','20-8-1','20-8-2','20-8-3','20-8-4','20-8-5','20-8-6','20-8-7','19-7-1','19-7-2','19-7-3','19-7-4','19-7-5','19-7-6','18-6-1','18-6-2','18-6-3','18-6-4','18-6-5','17-5-1','17-5-2','17-5-3','17-5-4','16-4-1','16-4-2','16-4-3',
      

      '49-36-1','49-36-2','49-36-3','49-36-4','49-36-5','49-36-6','49-36-7','49-36-8','48-35-1','48-35-2','48-35-3','48-35-4','48-35-5','48-35-6','48-35-7','48-35-8','47-34-1','47-34-2','47-34-3','47-34-4','47-34-5','47-34-6','47-34-7','47-34-8','46-33-1','46-33-2','46-33-3','46-33-4','46-33-5','46-33-6','46-33-7','46-33-8','45-32-1','45-32-2','45-32-3','45-32-4',
      '45-32-5','45-32-6','45-32-7','45-32-8','44-31-1','44-31-2','44-31-3','44-31-4','44-31-5','44-31-6','44-31-7','44-31-8','43-30-1','43-30-2','43-30-3','43-30-4','43-30-5','43-30-6','43-30-7','43-30-8','42-29-1','42-29-2','42-29-3','42-29-4','42-29-5','42-29-6','42-29-7','42-29-8','41-28-1','41-28-2','41-28-3','41-28-4','41-28-5','41-28-6','41-28-7','41-28-8',
      '40-27-1','40-27-2','40-27-3','40-27-4','40-27-5','40-27-6','40-27-7','40-27-8','39-26-1','39-26-2','39-26-3','39-26-4','39-26-5','39-26-6','39-26-7','39-26-8','38-25-1','38-25-2','38-25-3','38-25-4','38-25-5','38-25-6','38-25-7','38-25-8','37-24-1','37-24-2','37-24-3','37-24-4','37-24-5','37-24-6','37-24-7','37-24-8','36-23-1','36-23-2','36-23-3','36-23-4',
      '36-23-5','36-23-6','36-23-7','36-23-8','35-22-1','35-22-2','35-22-3','35-22-4','35-22-5','35-22-6','35-22-7','35-22-8','34-21-1','34-21-2','34-21-3','34-21-4','34-21-5','34-21-6','34-21-7','34-21-8','33-20-1','33-20-2','33-20-3','33-20-4','33-20-5','33-20-6','33-20-7','33-20-8','32-19-1','32-19-2','32-19-3','32-19-4','32-19-5','32-19-6','32-19-7','32-19-8',
      '31-18-1','31-18-2','31-18-3','31-18-4','31-18-5','31-18-6','31-18-7','31-18-8','30-17-1','30-17-2','30-17-3','30-17-4','30-17-5','30-17-6','30-17-7','30-17-8','29-16-1','29-16-2','29-16-3','29-16-4','29-16-5','29-16-6','29-16-7','29-16-8','28-15-1','28-15-2','28-15-3','28-15-4','28-15-5','28-15-6','28-15-7','28-15-8','27-14-1','27-14-2','27-14-3','27-14-4',
      '27-14-5','27-14-6','27-14-7','27-14-8','26-13-1','26-13-2','26-13-3','26-13-4','26-13-5','26-13-6','26-13-7','26-13-8','25-12-1','25-12-2','25-12-3','25-12-4','25-12-5','25-12-6','25-12-7','25-12-8','24-11-1','24-11-2','24-11-3','24-11-4','24-11-5','24-11-6','24-11-7','24-11-8','23-10-1','23-10-2','23-10-3','23-10-4','23-10-5','23-10-6','23-10-7','23-10-8',
      '22-9-1','22-9-2','22-9-3','22-9-4','22-9-5','22-9-6','22-9-7','22-9-8','21-8-1','21-8-2','21-8-3','21-8-4','21-8-5','21-8-6','21-8-7','21-8-1','21-8-2','20-7-1','20-7-2','20-7-3','20-7-4','20-7-5','20-7-6','19-6-1','19-6-2','19-6-3','19-6-4','19-6-5','18-5-1','18-5-2','18-5-3','18-5-4','17-2-1',
     

      '49-34-1','49-34-2','49-34-3','49-34-4','49-34-5','49-34-6','49-34-7','49-34-8','48-33-1','48-33-2','48-33-3','48-33-4','48-33-5','48-33-6','48-33-7','48-33-8','47-32-1','47-32-2','47-32-3','47-32-4','47-32-5','47-32-6','47-32-7','47-32-8','46-31-1','46-31-2','46-31-3','46-31-4','46-31-5','46-31-6','46-31-7','46-31-8','45-30-1','45-30-2','45-30-3','45-30-4',
      '45-30-5','45-30-6','45-30-7','45-30-8','44-29-1','44-29-2','44-29-3','44-29-4','44-29-5','44-29-6','44-29-7','44-29-8','43-29-1','43-29-2','43-28-3','43-28-4','43-28-5','43-28-6','43-28-7','43-28-8','42-27-1','42-27-2','42-27-3','42-27-4','42-27-5','42-27-6','42-27-7','42-27-8','41-26-1','41-26-2','41-26-3','41-26-4','41-26-5','41-26-6','41-26-7','41-26-8',
      '40-25-1','40-25-2','40-25-3','40-25-4','40-25-5','40-25-6','40-25-7','40-25-8','39-24-1','39-24-2','39-24-3','39-24-4','39-24-5','39-24-6','39-24-7','39-24-8','38-23-1','38-23-2','38-23-3','38-23-4','38-23-5','38-23-6','38-23-7','38-23-8','37-22-1','37-22-2','37-22-3','37-22-4','37-22-5','37-22-6','37-22-7','37-22-8','36-21-1','36-21-2','36-21-3','36-21-4',
      '36-21-5','36-21-6','36-21-7','36-21-8','35-20-1','35-20-2','35-20-3','35-20-4','35-20-5','35-20-6','35-20-7','35-20-8','34-19-1','34-19-2','34-19-3','34-19-4','34-19-5','34-19-6','34-19-7','34-19-8','33-18-1','33-18-2','33-18-3','33-18-4','33-18-5','33-18-6','33-18-7','33-18-8','32-17-1','32-17-2','32-17-3','32-17-4','32-17-5','32-17-6','32-17-7','32-17-8',
      '31-16-1','31-16-2','31-16-3','31-16-4','31-16-5','31-16-6','31-16-7','31-16-8','30-15-1','30-15-2','30-15-3','30-15-4','30-15-5','30-15-6','30-15-7','30-15-8','29-14-1','29-14-2','29-14-3','29-14-4','29-14-5','29-14-6','29-14-7','29-14-8','28-13-1','28-13-2','28-13-3','28-13-4','28-13-5','28-13-6','28-13-7','28-13-8','27-12-1','27-12-2','27-12-3','27-12-4',
      '27-12-5','27-12-6','27-12-7','27-12-8','26-11-1','26-11-2','26-11-3','26-11-4','26-11-5','26-11-6','26-11-7','26-11-8','25-10-1','25-10-2','25-10-3','25-10-4','25-10-5','25-10-6','25-10-7','25-10-8','24-9-1','24-9-2','24-9-3','24-9-4','24-9-5','24-9-6','24-9-7','24-9-8','23-8-1','23-8-2','23-8-3','23-8-4','23-8-5','23-8-6','23-8-7',
      '22-7-1','22-7-2','22-7-3','22-7-4','22-7-5','22-7-6','22-7','21-6-1','21-6-2','21-6-3','21-6-4','21-6-5','20-5-1','20-5-2','20-5-3','19-4-1','19-4-2','19-4-3','18-3-1','18-3-2',
      '18-9-5','18-9-6','18-9-7','18-9-8'
    ];

    const counts = {};
    tripletList.forEach(triplet => counts[triplet] = 0);

    draws.forEach(draw => {
      // Use only the 6 main numbers for triplet counting (exclude bonus)
      const nums = draw.numbers.map(n => n.value).sort((a, b) => a - b);

      // Generate all possible triplets from the 6 numbers
      for (let i = 0; i < nums.length - 2; i++) {
        for (let j = i + 1; j < nums.length - 1; j++) {
          for (let k = j + 1; k < nums.length; k++) {
            const triplet = `${nums[i]}-${nums[j]}-${nums[k]}`;
            if (counts.hasOwnProperty(triplet)) {
              counts[triplet]++;
            }
          }
        }
      }
    });

    return counts;
  };

  const countTripletsByMonth = (draws) => {
    const monthlyDraws = {};

    // Group draws by month and year
    draws.forEach(draw => {
      const match = draw.date.match(/(January|February|March|April|May|June|July|August|September|October|November|December)\s+\d{4}/i);
      if (match) {
        const monthYear = match[0].toLowerCase();
        if (!monthlyDraws[monthYear]) {
          monthlyDraws[monthYear] = [];
        }
        monthlyDraws[monthYear].push(draw);
      }
    });

    // Count triplets for each month
    const monthlyCounts = {};
    for (const [monthYear, drawsInMonth] of Object.entries(monthlyDraws)) {
      monthlyCounts[monthYear] = countTriplets(drawsInMonth);
    }

    return monthlyCounts;
  };

  const extractLotteryDataFromCSV = (csvText) => {
    const draws = [];
    const lines = csvText.split('\n').map(line => line.trim()).filter(line => line);

    for (const line of lines) {
        const numbersStr = line.split(',').map(item => item.trim());

        if (numbersStr.length === 7 && numbersStr.every(numStr => /^\d{1,2}$/.test(numStr))) {
            const numbers = numbersStr.map(Number).map(value => ({ value }));
            draws.push({
                title: 'UK 49\'s Draw (CSV)', // Generic title for CSV data
                date: 'N/A',             // Date might not be in the CSV
                numbers: numbers,
                drawType: 'N/A'          // Draw type might not be in the CSV
            });
        } else {
            console.warn(`Skipping invalid CSV line (must contain 7 comma-separated numbers): "${line}"`);
        }
    }

    return draws;
};

  return (
    <div className="min-h-screen bg-gray-100 flex flex-col items-center p-4">
      <h1 className="text-3xl font-bold mb-6">UK 49's Monthly Triplet Extractor</h1>

      <div className="w-full max-w-md mb-4">
        <textarea
          ref={textAreaRef}
          value={textInput}
          onChange={handleTextInputChange}
          placeholder="Paste the copied UK 49's results here..."
          className="w-full h-40 p-2 border rounded resize-y"
        />
      </div>

      <button
        onClick={processText}
        className="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 disabled:bg-gray-400"
        disabled={processing || !textInput}
      >
        Process Text
      </button>

      {processing && <p className="text-gray-600 italic mt-4">Processing text...</p>}

      <div className="w-full max-w-2xl mt-4">
        {results.length > 0 && (
          <>
            {results.map((draw, index) => (
              <div key={index} className="bg-white p-4 rounded-lg shadow-md mb-4">
                <h2 className="text-xl font-bold">{draw.title}</h2>
                <p className="text-gray-600 text-sm">Date: {draw.date || 'N/A'}</p>
                <div className="flex justify-around my-4">
                  {draw.numbers.map((num, idx) => (
                    <div
                      key={idx}
                      className="w-12 h-12 rounded-full flex items-center justify-center text-white font-bold text-lg shadow"
                      style={{ backgroundColor: '#9e9e9e' }}
                    >
                      {num.value}
                    </div>
                  ))}
                  {draw.bonus !== null && (
                    <div
                      className="w-12 h-12 rounded-full flex items-center justify-center text-white font-bold text-lg shadow"
                      style={{ backgroundColor: '#ff9800' }}
                    >
                      {draw.bonus}
                    </div>
                  )}
                </div>
                <div className="text-gray-600 text-sm">
                  <p>Draw Type: {draw.drawType || 'N/A'}</p>
                  <p>Bonus Number: {draw.bonus || 'N/A'}</p>
                </div>
              </div>
            ))}

            {Object.entries(monthlyTripletCounts).map(([monthYear, counts]) => (
              <div key={monthYear} className="bg-white p-4 rounded-lg shadow-md mb-4">
                <h2 className="text-xl font-bold">Triplet Counts for {monthYear}</h2>
                <div className="grid grid-cols-3 gap-2 mt-2">
                  {Object.entries(counts)
                    .filter(([_, count]) => count > 0)
                    .map(([triplet, count]) => (
                      <p key={triplet} className="text-gray-800">
                        {triplet}: {count}
                      </p>
                    ))}
                </div>
              </div>
            ))}
          </>
        )}
      </div>

      {results.length > 0 && (
        <button
          ref={saveButtonRef}
          onClick={saveToFirestore}
          className="bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600 mt-4"
        >
          Save to Firestore
        </button>
      )}
    </div>
  );
}